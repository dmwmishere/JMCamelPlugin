plugins {
    id 'java'
}

group 'org.dmwm.jmeter'
version '0.8'

def jmeter_home = "$System.env.JMETER_HOME"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //Jmeter stuff:
    compileOnly "org.apache.jmeter:ApacheJMeter_components:${jmeterVersion}"
    compileOnly "org.apache.jmeter:ApacheJMeter_java:${jmeterVersion}"

    // Camel stuff:
    compile "org.apache.camel:camel-core:${camelVersion}"
    compile "org.picocontainer:picocontainer:2.15"
    compile "org.reflections:reflections:0.9.10"

    compileOnly "org.projectlombok:lombok:1.16.20"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.apache.jmeter:ApacheJMeter_components:${jmeterVersion}"

}

jar {
    from('src/main/java') {
        include '**/*.properties'
    }
    from{
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

}

task runIt(dependsOn: jar) {
    doFirst {
        if (System.env.JMETER_HOME == null || System.env.JAVA_HOME == null) {
            throw new GradleException('Either JMETER_HOME or JAVA_HOME not specified!')
        }
    }
    doLast {
        copy {
            from "$buildDir/libs/"
            into "$jmeter_home/lib/ext/"
        }
    }
    doLast {
        exec {
            environment JAVA_HOME: "$System.env.JAVA_HOME"
            environment JVM_ARGS: "-Dbean_class_path=org.dmwm.jmeter.beans"

            executable "$jmeter_home/bin/jmeter"
            args "-t", "$projectDir/scenario/TestPlugin.jmx"
        }
    }
}

test {
    exclude '**/*TestCamelConfig*'
}